var fs = require('fs');
var path = require('path');
var spawn = require('child_process').spawn;


var npmOutput = '';
var npmOutdated = spawn('npm', ['outdated', '-q']);
npmOutdated.stdout.on('data', function(data) {
  npmOutput += data;
});
npmOutdated.on('close', function(code) {
  if (code) {
    console.error('npm outdated -q exists with ' + code);
    process.exit(code);
    return;
  }
  var packageJson = require('../package.json');
  var outdated = format(npmOutput);
  var dependencies = packageJson.dependencies;
  Object.keys(dependencies).forEach(function(moduleName) {
    if (!outdated[moduleName]) return;
    var params = dependencies[moduleName].split(/\s+/);
    params[1] = outdated[moduleName];
    dependencies[moduleName] = params.join(' ');
  });
  fs.writeFileSync(
    path.resolve(path.join(__dirname, '../package.json')), 
    JSON.stringify(packageJson, null, 2));
  process.exit(0);
});

function format(output) {
  var outdated = {};
  output.trim().split(/\n/).forEach(function(line) {
    var tokens = line.split(/\s+/);
    var moduleName = tokens[0];
    var current = tokens[2].split('=')[1];
    var wanted = tokens[3].split('=')[1];
    if (current !== wanted)
      outdated[moduleName] = '~' + wanted;
  });
  return outdated;
}

